import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {

  bool ohturn = true;
  List<String> displayEx0h = ['','','','','','','','',''];
  var myTextStyle = TextStyle(color: Colors.white, fontSize: 32);
  int exscore = 0;
  int ohscore = 0;
  int filledBoxes = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[900],
      body: Column(
        children: [
          Expanded(
            child: Container(
              child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Padding(
                      padding: const EdgeInsets.all(20.0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text("Player O", style: myTextStyle),
                          Text(ohscore.toString(), style: myTextStyle),
                        ],
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(20.0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Text("Player X", style: myTextStyle),
                          Text(exscore.toString(), style: myTextStyle),
                        ],
                      ),
                    ),
                  ]
              ),
            ),
          ),
          Expanded(
            flex: 3,
            child: GridView.builder(
                itemCount: 9,
                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount: 3),
                itemBuilder: (BuildContext context, int index) {
                  return GestureDetector(
                    onTap: () {
                      _tapped(index);
                    },
                    child: Container(
                      decoration: BoxDecoration(
                        border: Border.all(color: Colors.white70),
                      ),
                      child: Center(
                        child: Text(
                          displayEx0h[index],
                          style: TextStyle(color: Colors.white, fontSize: 32),
                        ),
                      ),
                    ),
                  );
                }
            ),
          ),
          Expanded(child: Container()),
        ],
      ),
    );
  }

  void _tapped(int index) {
    setState(() {
      if (ohturn && displayEx0h[index] == '') {
        displayEx0h[index] = "o";
        filledBoxes += 1;
      } else if (!ohturn && displayEx0h[index] == '') {
        displayEx0h[index] = "x";
        filledBoxes += 1;
      }
      ohturn = !ohturn;
      checkWinner();
    });
  }

  void checkWinner() {
    // Check for winning conditions

    // 1st row
    if (displayEx0h[0] == displayEx0h[1] &&
        displayEx0h[0] == displayEx0h[2] &&
        displayEx0h[0] != '') {
      showWinDialog(displayEx0h[0]);
    }

    // 2nd row
    if (displayEx0h[3] == displayEx0h[4] &&
        displayEx0h[3] == displayEx0h[5] &&
        displayEx0h[3] != '') {
      showWinDialog(displayEx0h[3]);
    }

    // 3rd row
    if (displayEx0h[6] == displayEx0h[7] &&
        displayEx0h[6] == displayEx0h[8] &&
        displayEx0h[6] != '') {
      showWinDialog(displayEx0h[6]);
    }

    // 1st column
    if (displayEx0h[0] == displayEx0h[3] &&
        displayEx0h[0] == displayEx0h[6] &&
        displayEx0h[0] != '') {
      showWinDialog(displayEx0h[0]);
    }

    // 2nd column
    if (displayEx0h[1] == displayEx0h[4] &&
        displayEx0h[1] == displayEx0h[7] &&
        displayEx0h[1] != '') {
      showWinDialog(displayEx0h[1]);
    }

    // 3rd column
    if (displayEx0h[2] == displayEx0h[5] &&
        displayEx0h[2] == displayEx0h[8] &&
        displayEx0h[2] != '') {
      showWinDialog(displayEx0h[2]);
    }

    // 1st diagonal
    if (displayEx0h[0] == displayEx0h[4] &&
        displayEx0h[0] == displayEx0h[8] &&
        displayEx0h[0] != '') {
      showWinDialog(displayEx0h[0]);
    }

    // 2nd diagonal
    if (displayEx0h[6] == displayEx0h[4] &&
        displayEx0h[6] == displayEx0h[2] &&
        displayEx0h[6] != '') {
      showWinDialog(displayEx0h[6]);
    }

    // Draw condition
    else if (filledBoxes == 9) {
      showDrawDialog();
    }
  }

  void showDrawDialog() {
    showDialog(
      barrierDismissible: false,
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text("Draw"),
          actions: [
            ElevatedButton(
              onPressed: () {
                clearboard();
                Navigator.of(context).pop();
              },
              child: Text("Play Again!"),
            )
          ],
        );
      },
    );
  }

  void showWinDialog(String winner) {
    showDialog(
      barrierDismissible: false,
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text("Winner is: " + winner),
          actions: [
            ElevatedButton(
              onPressed: () {
                clearboard();
                Navigator.of(context).pop();
              },
              child: Text("Play Again!"),
            )
          ],
        );
      },
    );
    if (winner == 'o') {
      ohscore += 1;
    } else if (winner == 'x') {
      exscore += 1;
    }
  }

  void clearboard() {
    setState(() {
      displayEx0h = ['','','','','','','','',''];
      filledBoxes = 0;
    });
  }
}
